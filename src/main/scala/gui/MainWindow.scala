package gui

import autogenerated_code.GuiApp
import java.awt.event.{WindowEvent, MouseEvent}
import model.{BackupDirectory, GameDirectory, Settings}
import javax.swing.SwingWorker
import java.io.File
import java.nio.file.Paths


/**
 * Created by Chris on 7/4/2014.
 */


class MainWindow extends GuiApp {
  if (!Settings.exists) {
    val initializationWindow = new Initializer(this, true)
    initializationWindow.setVisible(true)
  }

  val settings = Settings.loadAppSettings()
  val gameDir = new GameDirectory(new File(settings.get("SAVE_FILE_PATH")))
  val backupDir = new BackupDirectory(new File(Paths.get(System.getenv("APPDATA"), "DoNotStarveBackup", "backup").toString))
  var backerUpper = new Overwatch()

  val restoreWindow = new RestoreWindow(this, true, backupDir, gameDir);

  override def formWindowOpened(evt: WindowEvent): Unit = {
  }

  override def startButtonMouseClicked(evt: MouseEvent): Unit = {
    startButton.getText match {
      case "Start Backup" =>
        backerUpper = new Overwatch()
        backerUpper.execute()
        this.startButton.setText("Stop Backup")
        this.restoreButton.setEnabled(false)
        this.settingsButton1.setEnabled(false)
      case "Stop Backup" =>
        backerUpper.cancel(false)
        backerUpper = null
        this.startButton.setText("Start Backup")
        this.restoreButton.setEnabled(true)
        this.settingsButton1.setEnabled(true)
    }
  }

  override def restoreButtonMouseClicked(evt: MouseEvent) {
    this.restoreWindow.setVisible(true)
  }

  class Overwatch extends SwingWorker[Void, String] {
    var animator = new TextAnimator(statusDisplay, statusDisplay.getText)

    override def doInBackground(): Void = {
      animator.execute()
      while(!isCancelled) {
        if (gameDir.getDateLastModified() > backupDir.getDateLastModified()) {
          println("Savin!")
          backupDir.backupTo(gameDir)
          animator.setNewTemplate("<html>Status: <font color=288d28>Creating restore point%s</font></html>")
          Thread.sleep(2000)
        }
        else {
          println("Waitin'")
          animator.setNewTemplate("<html>Status: <font color=9e7324>Monitoring Save Files%s</font></html>")
          Thread.sleep(1000)
        }
      }
      println("I've been quit!!")
      animator.cancel(true)
      statusDisplay.setText("Status: Not Started")
      null
    }


  }







}
