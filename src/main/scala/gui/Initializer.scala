package gui

import autogenerated_code.InitialPopup
import javax.swing.{JOptionPane, SwingWorker, JFrame}
import java.awt.event.{WindowEvent, MouseEvent}
import model.GameFinder
import java.io.IOException

/**
 * Created by Chris on 7/5/2014.
 */
class Initializer(val _parent: JFrame, val _modal: Boolean) extends InitialPopup(_parent, _modal) {
  private val statusTemplateSearch = "<html>Status: <font color=ffa500>Searching%s</font>"
  private val statusTemplateDone   = "<html>Status: <font color=green>Done! Enjoy!</font>"

  private val animatedText = new TextAnimator(this.statusLabel, statusTemplateSearch)
  private val gameSearchThread = new GameSearchThread()


  override def formWindowActivated(evt: WindowEvent): Unit = {
    animatedText.execute()
    gameSearchThread.execute()
  }

  override def closeButtonMouseClicked(evt: MouseEvent): Unit = {
    this.setVisible(false)
    this.dispose()
  }

//  private def animateSearchingMsg(): Unit = {
//    ellipseThread.start()
//  }


  class GameSearchThread extends SwingWorker[Void, Void] {
    protected def doInBackground: Void = {
      try {
        GameFinder.performInitialGameSearch()
      } catch {
        case ex: IOException => showFailedDialog(ex.getMessage)
      }
      null
    }

    override def done() = {
      animatedText.cancel(true)
      statusLabel.setText(statusTemplateDone)
      closeButton.setEnabled(true)
      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE)
    }

    private def showFailedDialog(error: String): Unit = {
      val buggerMsg =
        "Bugger! Something is amiss! I was unable \n" +
          "to find your game files. This is likely my fault.\n" +
          "Feel free to drop me a line at audionautic@gmail.com \n" +
          "and I'll get this sorted out post haste!\n\n Reason For Error:\n" +
          error
      JOptionPane.showMessageDialog(null, buggerMsg, "Doh!", JOptionPane.ERROR_MESSAGE)
      System.exit(1);
    }
  }

}
